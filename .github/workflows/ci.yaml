name: ci

on:
  push:
    paths-ignore:
      - "**.md"
      - "**.go"
  pull_request:
    paths-ignore:
      - "**.md"
      - "**.go"


jobs:
  # Label of the container job
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install -g lerna
      - run: lerna add @roc/core --scope=@roc/platform
      - run: lerna add @roc/core --scope=@roc/tunnel
      - run: lerna bootstrap
      - run: lerna run build
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install -g lerna
      - run: lerna add @roc/core --scope=@roc/platform
      - run: lerna add @roc/core --scope=@roc/tunnel
      - run: lerna bootstrap
      - run: lerna run lint
  test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis/redis-stack
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install -g lerna
      - run: lerna add @roc/core --scope=@roc/platform
      - run: lerna add @roc/core --scope=@roc/tunnel
      - run: lerna bootstrap
      - run: lerna run test
