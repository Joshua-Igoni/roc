name: docker

on:
  push:
    paths-ignore:
      - "*.md"
  pull_request:
    paths-ignore:
      - "*.md"

jobs:
  platform:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: roc-platform
    steps:
      - uses: actions/checkout@v3
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: docker build roc-platform:${{ steps.vars.outputs.sha_short }}
        uses: docker/build-push-action@v3
        with:
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          tags: "${{ startsWith(github.ref, 'refs/tags/v') ? github.event.release.name : steps.vars.outputs.sha_short }}"
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.platform
  
  tunnel:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: roc-tunnel
    steps:
      - uses: actions/checkout@v3
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
      - name: Log in to the Container Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}      

      - name: Check Outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Docker Push
        uses: docker/build-push-action@v3
        with:
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          tags: "${{ startsWith(github.ref, 'refs/tags/v') ? github.event.release.name : steps.vars.outputs.sha_short }}"
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile.tunnel
