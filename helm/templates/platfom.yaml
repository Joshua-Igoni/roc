apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name}}-platform
spec:
  replicas: {{.Values.platform.replica.replicaCount}}
  selector:
    matchLabels:
      roc.service.name: platform
  template:
    metadata:
      labels:
        roc.service.name: platform
    spec:
      containers:
        - image: {{.Values.platform.image.registry}}/{{.Values.platform.image.repository}}:{{.Values.platform.image.tag}}
          name: roc-platform
          ports:
            - containerPort: 3000
          env:
            - name: REDIS_URL
              value: redis://{{.Release.Name}}-redis-master:{{.Values.redis.master.service.ports.redis}}
            - name: S3_HOST
              value: "{{ .Release.Name }}-minio"
            - name: S3_PORT
              value: "9000"
            - name: S3_USER
              value: {{.Values.platform.s3.user}}
            - name: S3_PWD
              value: {{.Values.platform.s3.pwd}}
          resources: { }
          imagePullPolicy: Always
      serviceAccountName: {{ .Release.Name }}-platform
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: {{.Release.Name}}-platform
spec:
  type: ClusterIP
  ports:
    - name: "http"
      port: 3000
      targetPort: 3000
  selector:
    roc.service.name: platform
